{"version":3,"file":"static/js/543.510313b8.chunk.js","mappings":"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","sources":["components/TrendMovies/TrendMovies.styled.js","components/MovieSearchList/MovieSearchList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/MoviePage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #ffffff;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { StyledLink } from 'components/TrendMovies/TrendMovies.styled';\nimport { useLocation } from 'react-router-dom';\nimport { Card, CardContent, CardMedia, Typography } from '@mui/material';\n\nexport default function MovieSearchList({ items }) {\n  const location = useLocation();\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <div>\n      {items ? (\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          }}\n        >\n          {items.map(item => (\n            <Card\n              key={item.id}\n              sx={{ maxWidth: 200, margin: 2, backgroundColor: 'grey' }}\n            >\n              <StyledLink to={`${item.id}`} state={{ from: location }}>\n                <CardMedia\n                  component=\"img\"\n                  alt={item.title}\n                  height=\"300\"\n                  width=\"200\"\n                  image={\n                    item.poster_path\n                      ? imgBaseUrl + item.poster_path\n                      : 'https://www.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg'\n                  }\n                />\n\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    component=\"div\"\n                    textAlign={'center'}\n                  >\n                    {item.title}\n                  </Typography>\n                </CardContent>\n              </StyledLink>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <p>Loading, please wait.....</p>\n      )}\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const StyledFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  margin-bottom: 16px;\n  width: 400px;\n`;\n","import { Box, Button } from '@mui/material';\nimport { StyledFormContainer, StyledTextField } from './SearchBar.styled';\n\nexport default function SearchBar({ onSubmit, inputData, onChange }) {\n  return (\n    <StyledFormContainer>\n      {/* <form onSubmit={onSubmit}>\n        <input\n          id=\"movies\"\n          type=\"text\"\n          name=\"search\"\n          value={inputData}\n          onChange={onChange}\n          placeholder=\"Enter name of movie here\"\n        />\n        <TextField id=\"movies\" label=\"Search field\" type=\"search\" />\n        <label htmlFor=\"movies\"></label>\n\n        <button type=\"submit\">Search</button>\n      </form> */}\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1 },\n        }}\n        noValidate\n        onSubmit={onSubmit}\n      >\n        <StyledTextField\n          id=\"movies\"\n          label=\"Enter name of movie here\"\n          type=\"search\"\n          variant=\"outlined\"\n          value={inputData}\n          onChange={onChange}\n          color=\"warning\"\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"warning\"\n          sx={{ marginTop: '16px', backgroundColor: 'orange' }}\n        >\n          Search\n        </Button>\n      </Box>\n    </StyledFormContainer>\n  );\n}\n","import { fetchByQueryMovie } from 'api';\nimport MovieSearchList from 'components/MovieSearchList/MovieSearchList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport default function MoviePage() {\n  const [queryResult, setQueryResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('searchQuery') ?? '');\n\n  const input = searchParams.get('searchQuery') ?? '';\n\n  useEffect(() => {\n    if (!input) {\n      setQueryResult([]);\n      return;\n    }\n    const result = async () => {\n      try {\n        const result = await fetchByQueryMovie(input);\n        setQueryResult(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    result();\n  }, [input]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query === '') {\n      return toast.error('Please enter name of a movie');\n    }\n    setSearchParams({ searchQuery: query });\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <SearchBar\n        onSubmit={handleSubmit}\n        inputData={query}\n        onChange={handleInputChange}\n      />\n      <MovieSearchList items={queryResult} />\n      <Toaster />\n    </div>\n  );\n}\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieSearchList","_ref","items","location","useLocation","_jsx","children","style","display","flexWrap","justifyContent","map","item","Card","sx","maxWidth","margin","backgroundColor","_jsxs","to","concat","id","state","from","CardMedia","component","alt","title","height","width","image","poster_path","CardContent","Typography","variant","textAlign","StyledFormContainer","StyledTextField","_templateObject2","TextField","_templateObject3","SearchBar","onSubmit","inputData","onChange","Box","m","noValidate","label","type","value","color","Button","marginTop","MoviePage","_searchParams$get","_searchParams$get2","_useState","useState","_useState2","_slicedToArray","queryResult","setQueryResult","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","get","_useState4","query","setQuery","input","useEffect","result","_asyncToGenerator","_regeneratorRuntime","_callee","_result","_context","prev","next","fetchByQueryMovie","sent","t0","console","log","stop","apply","arguments","e","preventDefault","toast","searchQuery","target","Toaster"],"sourceRoot":""}