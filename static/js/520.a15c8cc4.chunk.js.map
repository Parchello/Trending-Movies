{"version":3,"file":"static/js/520.a15c8cc4.chunk.js","mappings":"sQAGe,SAASA,EAAaC,GAAqB,IAAlBC,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OAE7C,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGH,GACCE,EAAAA,EAAAA,MAAAE,EAAAA,SAAA,CAAAD,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAAA,OACEC,IACEN,EAAMO,YARL,kCASYP,EAAMO,YACf,uGAENC,IAAKR,EAAMS,WAGfP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKH,EAAMS,SACXP,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaH,EAAMU,aAAa,UACnCL,EAAAA,EAAAA,KAAA,MAAAF,SAAI,cACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAIH,EAAMW,YACVN,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YACJE,EAAAA,EAAAA,KAAA,MAAAF,SACGF,EAAOW,KAAI,SAAAC,GAAK,OACfR,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAAA,KAAAF,SAAIU,EAAMC,QADHD,EAAME,GAEV,aAMbV,EAAAA,EAAAA,KAACW,EAAAA,GAAW,CACVC,OAAO,MACPC,MAAM,MACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,aAGbrB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACC,GAAG,QAAOtB,SAAC,YAEtBE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACC,GAAG,UAAStB,SAAC,kBAG1BE,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,MAGb,C,aCnDe,SAASC,IACtB,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCjC,EAAMkC,EAAA,GAAEC,EAASD,EAAA,GAChBE,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,eAAAzC,GAAA0C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA3C,EAAA,OAAA0C,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAcV,GAAS,KAAD,OAC5BW,KADRhD,EAAK4C,EAAAK,QAEThB,EAAgBjC,GAChBoC,EAAUpC,EAAMC,SACjB2C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEDO,QAAQC,IAAGR,EAAAM,IAAQ,yBAAAN,EAAAS,OAAA,GAAAV,EAAA,kBAEtB,kBAVW,OAAA5C,EAAAuD,MAAA,KAAAC,UAAA,KAYZf,GACF,GAAG,CAACH,KAGFhC,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAACP,EAAa,CAACE,MAAOgC,EAAc/B,OAAQA,KAGlD,C","sources":["components/SelectedMovie/SelectedMovie.js","pages/MovieDetailPage.js"],"sourcesContent":["import { ProgressBar } from 'react-loader-spinner';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport default function SelectedMovie({ movie, genres }) {\n  const imgUrl = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <div>\n      {movie ? (\n        <>\n          <div>\n            <img\n              src={\n                movie.poster_path\n                  ? imgUrl + movie.poster_path\n                  : 'https://www.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg'\n              }\n              alt={movie.title}\n            />\n          </div>\n          <div>\n            <h1>{movie.title}</h1>\n            <p>User score: {movie.vote_average}/10</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>\n                  <p>{genre.name}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      ) : (\n        <ProgressBar\n          height=\"400\"\n          width=\"400\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#F4442E\"\n          barColor=\"#51E5FF\"\n        />\n      )}\n      <ul>\n        <li>\n          <NavLink to=\"casts\">cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">revievs</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n","import { fetchOneMovie } from 'api';\nimport SelectedMovie from 'components/SelectedMovie/SelectedMovie';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function MovieDetailPage() {\n  const [selecteMovie, setselecteMovie] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const result = async () => {\n      try {\n        const movie = await fetchOneMovie(movieId);\n        if (movie !== undefined) {\n          setselecteMovie(movie);\n          setGenres(movie.genres);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    result();\n  }, [movieId]);\n\n  return (\n    <div>\n      <SelectedMovie movie={selecteMovie} genres={genres} />\n    </div>\n  );\n}\n"],"names":["SelectedMovie","_ref","movie","genres","_jsxs","children","_Fragment","_jsx","src","poster_path","alt","title","vote_average","overview","map","genre","name","id","ProgressBar","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","NavLink","to","Outlet","MovieDetailPage","_useState","useState","_useState2","_slicedToArray","selecteMovie","setselecteMovie","_useState3","_useState4","setGenres","movieId","useParams","useEffect","result","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchOneMovie","undefined","sent","t0","console","log","stop","apply","arguments"],"sourceRoot":""}